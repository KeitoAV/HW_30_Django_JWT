# Generated by Django 4.1.3 on 2022-11-14 14:31

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=60)),
                (
                    "lat",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=8, null=True
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=8, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Местоположение",
                "verbose_name_plural": "Местоположения",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=100, null=True, verbose_name="Имя"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=150, null=True, verbose_name="Фамилия"),
                ),
                (
                    "username",
                    models.CharField(max_length=20, unique=True, verbose_name="Логин"),
                ),
                ("password", models.CharField(max_length=200, verbose_name="Пароль")),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("member", "Пользователь"),
                            ("moderator", "Модератор"),
                            ("admin", "Администратор"),
                        ],
                        default="member",
                        max_length=10,
                    ),
                ),
                ("age", models.SmallIntegerField(null=True)),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, validators=[users.validators.check_min_age]
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        max_length=254,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.EmailValidator(),
                            django.core.validators.RegexValidator(
                                inverse_match=True,
                                message="Домен Рамблера запрещен.",
                                regex="(?:rambler\\.ru)",
                            ),
                        ],
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                ("location", models.ManyToManyField(to="users.location")),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
